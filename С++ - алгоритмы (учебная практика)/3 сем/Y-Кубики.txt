#include <vector>
#include <algorithm>
#include <iostream>
using namespace std;
vector<int> z_function(vector<int>&s) {
    int n = s.size();
    vector<int> z(n, 0);
    int l = 0, r = 0;
    for(int i = 1; i < n; ++i) {
        if (i <= r)
            z[i] = min(r - i + 1, z[i - l]);
        while(i + z[i] < n && s[z[i]] == s[i + z[i]])
            z[i]++;
        if (i + z[i] - 1 > r) {
            l = i;
            r = i + z[i] - 1;
        }
    }
    z[0] = n;
    return z;
}

int main() {
    int N, M, a;
    cin >> N >> M;
    vector<int> s;
    for(int i = 0; i < N; ++i) {
        cin >> a;
        s.push_back(a);
    }
    for(int i = N - 1; i >= 0; --i)
        s.push_back(s[i]);
    vector<int> z = z_function(s);
    vector<int> answer;
    answer.push_back(N);
    int j = 1;
    for(int i = s.size() - 1; i >= N; --i) {
        if (z[i] == j && j % 2 == 0)
            answer.push_back(N - j / 2);
        j++;
    }
    reverse(answer.begin(), answer.end());
    for(int i = 0; i < answer.size(); ++i)
        cout << answer[i] << ' ';
    return 0;
}
